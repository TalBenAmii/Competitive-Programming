אלגוריתם:
בונים Suffix Array עבור המחרוזת s.
כדי לחשב את התשובה עבור i,j, מחשבים את ה-LCP המינימלי בטווח [a+1,b+1), כאשר a הוא האינדקס של הסיומת ה-i ב-Suffix Array ו- b הוא האינדקס של הסיומת ה-j.
כדי למצוא את המינימום ביעילות משתמשים ב- Segment Tree.

נכונות:
LCP[a] שווה לאורך התחילית המשותפת הארוכה ביותר בין הסיומות SA[a], SA[a-1]
לכן המינימום של {LCP[a+1], LCP[a+2] ... LCP[b]}  יהיה שווה לאורך התחילית המשותפת הארוכה ביותר בין SA[a], SA[b] שזה הפלט הדרוש.

סיבוכיות זמן:
O(n + qlogn) = 2M

סיבוכיות מקום:
100K

מקרי קצה:
אם a==b אז מחזירים ישר 1.

אלגוריתמים חיצוניים:
Suffix Array שמסופק בחומר הקורס.
Segment Tree שמסופק בחומר הקורס (+ התאמה למינימום במקום סכום).
